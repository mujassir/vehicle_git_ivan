using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using VehicleApplication.CustomClasses;
using VehicleApplication.DAL;
using System.Web.Script.Serialization;

namespace VehicleApplication
{
    public partial class SiteMaster : System.Web.UI.MasterPage
    {
        protected void Page_Init(object sender, EventArgs e)
        {
            if (Session["UserID"] + "" == "")
            {
                string returnURL = Request.Url.AbsolutePath;
                Response.Redirect("Login.aspx?ReturnURL=" + returnURL);
            }
            CheckAuthorization();
        }

        public void CheckAuthorization()
        {
            var accessDeniedURL = "accessdenied.aspx";
            var commonPages = new List<string>();
            commonPages.Add("accessdenied.aspx");
            commonPages.Add("login.aspx");
            commonPages.Add("default.aspx");
            commonPages.Add("changepassword.aspx");
            var pageURL = System.IO.Path.GetFileName(Request.Url.AbsolutePath).ToLower();

            var allow = false;
            if (commonPages.Contains(pageURL))
            {
                allow = true;
            }
            if (!allow)
            {
                var roleActions = (List<RoleAction>)Session["roleActions"];
                var action = roleActions.FirstOrDefault(p => p.ModuleURL == pageURL);
                if (action != null)
                {
                    if (action.CanView) allow = true;
                    Session["PageAction"] = action;
                }
                if (!allow)
                {
                    Response.Redirect(accessDeniedURL);
                    Response.End();
                }
            }
        }
        public string GetPageAction()
        {
            return new JavaScriptSerializer().Serialize(Session["PageAction"]);
            //  return "test";
        }

        public void ShowMessage(string message, MessageType type)
        {
            divMessage.InnerHtml = message;
            switch (type)
            {
                case MessageType.Info:
                    divMessage.Attributes["class"] = "info";
                    break;
                case MessageType.Success:
                    divMessage.Attributes["class"] = "success";
                    break;
                case MessageType.Warning:
                    divMessage.Attributes["class"] = "warning";
                    break;
                case MessageType.Error:
                    divMessage.Attributes["class"] = "error";
                    break;
            }
        }
        public void HideMessage()
        {
            divMessage.InnerHtml = "";
            divMessage.Attributes["class"] = "";
        }
    }
}
